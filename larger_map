# -*- coding: utf8 -*-
import gdal
import numpy as np


def writeTiff(im_data, im_width, im_height, im_bands, path, im_geotrans=None, im_proj=None):
    if 'int8' in im_data.dtype.name:
        datatype = gdal.GDT_Byte
    elif 'int16' in im_data.dtype.name:
        datatype = gdal.GDT_UInt16
    else:
        datatype = gdal.GDT_Float32

    if len(im_data.shape) == 3:
        im_bands, im_height, im_width = im_data.shape
    else:
        im_bands, (im_height, im_width) = 1, im_data.shape
        # 创建文件
    driver = gdal.GetDriverByName("GTiff")
    dataset = driver.Create(path, im_width, im_height, im_bands, datatype)
    if (dataset != None) & (im_geotrans != None) & (im_proj != None):
        dataset.SetGeoTransform(im_geotrans)  # 写入仿射变换参数
        dataset.SetProjection(im_proj)  # 写入投影
    if im_bands == 1:
        for i in range(im_bands):
            dataset.GetRasterBand(i + 1).WriteArray(im_data)
    else:
        for i in range(im_bands):
            dataset.GetRasterBand(i+1).WriteArray(im_data[i])
    del dataset


def larger(file_read, file_out):
    file_com = '/home/zb/tmp/1/tinysample.tif'
    im_tiny = gdal.Open(file_com)

    im = gdal.Open(file_read)
    im_arr = im.ReadAsArray()

    writeTiff(im_arr, 15106, 5106, 1, file_out, [0, 12, 0, 0, 0, -12], im_tiny.GetProjection())


if __name__ == '__main__':

    filename = '/media/zb/ml/20171026_初赛第一阶段的建筑物变化标记.tif/初赛第一阶段的建筑物变化标记.tif'
    fileout = '/home/zb/first_provided.tif'
    larger(filename, fileout)



